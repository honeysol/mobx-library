{"version":3,"file":"mobx-initializer.cjs.production.min.js","sources":["../src/method.ts","../src/property.ts","../src/index.ts","../src/class.ts"],"sourcesContent":["export const combineMethodDecorator = (\n  ...decorators: MethodDecorator[]\n): MethodDecorator => {\n  return (\n    _target: object,\n    fieldName: string | symbol,\n    _descriptor: PropertyDescriptor\n  ) => {\n    const target = _target;\n    let descriptor = _descriptor;\n    for (const decorator of decorators) {\n      descriptor = decorator(target, fieldName, descriptor) || descriptor;\n    }\n    //return descriptor === _descriptor ? undefined : descriptor;\n  };\n};\n\nconst isClass = (target: any) => {\n  return (\n    typeof target === \"object\" &&\n    Object.prototype.hasOwnProperty.call(target, \"constructor\")\n  );\n};\nexport type MethodDecoratorGenerator<A> = (params: A) => MethodDecorator;\nexport type MethodDecoratorOptionalGenerator<A> = MethodDecoratorGenerator<A> &\n  MethodDecorator;\n\nexport const parametrizeMethodDecorator = <T, S>(\n  decoratorFactory: MethodDecoratorGenerator<S>,\n  defaultValue: (\n    target: T,\n    fieldName: string,\n    descriptor: PropertyDescriptor\n  ) => S\n): MethodDecoratorOptionalGenerator<S> => {\n  return (((...args: any[]) => {\n    if (isClass(args[0])) {\n      // without parameter\n      const [target, fieldName, descriptor] = args as [\n        T,\n        string,\n        PropertyDescriptor\n      ];\n      return decoratorFactory(defaultValue(target, fieldName, descriptor))(\n        target,\n        fieldName,\n        descriptor\n      );\n    } else {\n      // with parameter\n      const [params] = args as [S];\n      return decoratorFactory(params);\n    }\n  }) as unknown) as MethodDecoratorOptionalGenerator<S>;\n};\n","export const combinePropertyDecorator = (\n  ...decorators: PropertyDecorator[]\n): PropertyDecorator => {\n  return (\n    _target: object,\n    fieldName: string | symbol,\n    descriptor?: PropertyDescriptor\n  ) => {\n    const target = _target;\n    for (const decorator of decorators) {\n      (decorator as any)(target, fieldName, descriptor);\n    }\n    //return descriptor === _descriptor ? undefined : descriptor;\n  };\n};\n\nconst isClass = (target: any) => {\n  return (\n    typeof target === \"object\" &&\n    Object.prototype.hasOwnProperty.call(target, \"constructor\")\n  );\n};\n\nexport type PropertyDecoratorGenerator<A> = (params: A) => PropertyDecorator;\nexport type PropertyDecoratorOptionalGenerator<A> = PropertyDecoratorGenerator<\n  A\n> &\n  PropertyDecorator;\n\nexport const parametrizePropertyDecorator = <T, S>(\n  decoratorGenerator: PropertyDecoratorGenerator<S>,\n  defaultValue: (\n    target: T,\n    fieldName: string,\n    descriptor: PropertyDescriptor\n  ) => S\n): PropertyDecoratorOptionalGenerator<S> => {\n  return (((...args: any[]) => {\n    if (isClass(args[0])) {\n      // without parameter\n      const [target, fieldName, descriptor] = args as [\n        T,\n        string,\n        PropertyDescriptor\n      ];\n      return decoratorGenerator(defaultValue(target, fieldName, descriptor))(\n        target,\n        fieldName\n      );\n    } else {\n      // with parameter\n      const [params] = args as [S];\n      return decoratorGenerator(params);\n    }\n  }) as unknown) as PropertyDecoratorOptionalGenerator<S>;\n};\n","export * from \"./class\";\nexport * from \"./method\";\nexport * from \"./property\";\n\nexport const applyHandler = <T>(\n  target: any,\n  handlersName: string,\n  ...args: any\n) => {\n  const handlersPropertyName = \"_\" + handlersName + \"Handler\";\n  const flagPropetyName = handlersPropertyName + \"Done\";\n  if (target[flagPropetyName]) {\n    return;\n  }\n  target[flagPropetyName] = true;\n  for (\n    let current = target;\n    current;\n    current = Object.getPrototypeOf(current)\n  ) {\n    if (Object.prototype.hasOwnProperty.call(current, handlersPropertyName)) {\n      for (const handler of current[handlersPropertyName] || []) {\n        handler.apply(target, args);\n      }\n    }\n  }\n};\n\nexport const addHandler = (target: any, handlersName: string, handler: any) => {\n  const handlersPropertyName = \"_\" + handlersName + \"Handler\";\n  if (!Object.prototype.hasOwnProperty.call(target, handlersPropertyName)) {\n    target[handlersPropertyName] = [];\n  }\n  target[handlersPropertyName].push(handler);\n};\n","export type ClassType<T> = new (...args: any[]) => T;\nexport type ClassDecorator<T> = (\n  target: ClassType<T>\n) => ClassType<T> | undefined;\n\nexport const combineClassDecorator = <T>(\n  ...decorators: ClassDecorator<T>[]\n): ClassDecorator<T> => {\n  return ((target: ClassType<T>) => {\n    let current = target;\n    for (const decorator of decorators) {\n      current = decorator(current) || current;\n    }\n    return current === target ? undefined : current;\n  }) as ClassDecorator<T>;\n};\n"],"names":["isClass","target","Object","prototype","hasOwnProperty","call","handlersName","handler","handlersPropertyName","push","flagPropetyName","args","current","getPrototypeOf","apply","decorators","decorator","undefined","_target","fieldName","_descriptor","descriptor","decoratorFactory","defaultValue","params","decoratorGenerator"],"mappings":"u4BAiBMA,EAAU,SAACC,SAEK,iBAAXA,GACPC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQ,gBCJ3CD,EAAU,SAACC,SAEK,iBAAXA,GACPC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQ,mCCSvB,SAACA,EAAaK,EAAsBC,OACtDC,EAAuB,IAAMF,EAAe,UAC7CJ,OAAOC,UAAUC,eAAeC,KAAKJ,EAAQO,KAChDP,EAAOO,GAAwB,IAEjCP,EAAOO,GAAsBC,KAAKF,yBA7BR,SAC1BN,EACAK,OAGME,EAAuB,IAAMF,EAAe,UAC5CI,EAAkBF,EAAuB,WAC3CP,EAAOS,IAGXT,EAAOS,IAAmB,6BAPvBC,mCAAAA,wBASD,IAAIC,EAAUX,EACdW,EACAA,EAAUV,OAAOW,eAAeD,MAE5BV,OAAOC,UAAUC,eAAeC,KAAKO,EAASJ,iBAC1BI,EAAQJ,IAAyB,mBAAI,KAAhDD,UACTA,EAAQO,MAAMb,EAAQU,oCCjBO,sCAChCI,2BAAAA,yBAEK,SAACd,aACHW,EAAUX,MACUc,kBACtBH,GAAUI,WAAUJ,IAAYA,SAE3BA,IAAYX,OAASgB,EAAYL,mCHbN,sCACjCG,2BAAAA,yBAEI,SACLG,EACAC,EACAC,aAEMnB,EAASiB,EACXG,EAAaD,MACOL,kBACtBM,GAAaL,WAAUf,EAAQkB,EAAWE,IAAeA,qCCXvB,sCACnCN,2BAAAA,yBAEI,SACLG,EACAC,EACAE,aAEMpB,EAASiB,MACSH,mBACrBC,WAAkBf,EAAQkB,EAAWE,wCDiBF,SACxCC,EACAC,UAMS,sCAAIZ,2BAAAA,qBACPX,EAAQW,EAAK,IAAK,KAEbV,EAAiCU,KAAzBQ,EAAyBR,KAAdU,EAAcV,YAKjCW,EAAiBC,EAAatB,EAAQkB,EAAWE,GAAjDC,CACLrB,EACAkB,EACAE,OAIKG,EAAUb,YACVW,EAAiBE,0CCtBc,SAC1CC,EACAF,UAMS,sCAAIZ,2BAAAA,qBACPX,EAAQW,EAAK,IAAK,KAEbV,EAAiCU,KAAzBQ,EAAyBR,KAAdU,EAAcV,YAKjCc,EAAmBF,EAAatB,EAAQkB,EAAWE,GAAnDI,CACLxB,EACAkB,OAIKK,EAAUb,YACVc,EAAmBD"}