{"version":3,"file":"mobx-react-component.cjs.production.min.js","sources":["../src/component.ts","../src/intercept.ts","../src/prop.ts","../src/state.ts","../src/render.ts","../src/resource.ts","../src/watch.ts"],"sourcesContent":["import { observable } from \"mobx\";\nimport {\n  initializer,\n  applyHandlerOnce,\n  combineDecorator,\n} from \"mobx-initializer\";\n\nconst componentAppliedFlag = Symbol(\"isAppliedMobxReactComponentInitializer\");\nconst pureComponentAppliedFlag = Symbol(\n  \"isAppliedMobxReactPureComponentInitializer\"\n);\n\nexport const componentStatus = Symbol(\"componentStatus\");\n\ninterface MobXComponent extends React.Component{\n  componentStatus?: \"mounted\";\n}\n\nconst _component = (target: new (...args:any[]) => MobXComponent) => {\n  if (target.prototype[componentAppliedFlag]) {\n    return target;\n  }\n  class component extends target {\n    [componentAppliedFlag] = true;\n    [componentStatus]?: string;\n    @observable.ref\n    props;\n    constructor(props) {\n      super(props);\n      applyHandlerOnce(this, \"stateRegister\", props);\n      applyHandlerOnce(this, \"resourceRegister\", props);\n    }\n    componentDidMount() {\n      super.componentDidMount?.call(this);\n      this[componentStatus] = \"mounted\";\n    }\n    componentWillUnmount() {\n      super.componentWillUnmount?.call(this);\n      applyHandlerOnce(this, \"release\");\n    }\n  };\n  return component;\n};\n\n// pure componentでは、propの変更があってもstateの変更がない限り、renderされない\n\nconst _pureComponent = target => {\n  if (target.prototype[pureComponentAppliedFlag]) {\n    return target;\n  }\n  return class component extends target {\n    [pureComponentAppliedFlag] = true;\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n      return nextState !== this.state;\n    }\n  };\n};\n\nexport const component:any = combineDecorator(initializer, _component);\n\ncomponent.pure = combineDecorator(initializer, _component, _pureComponent);\n","import { intercept as mobxIntercept, computed } from \"mobx\";\nimport { addHandler, parametrizeDecorator } from \"mobx-initializer\";\nimport _ from \"lodash\";\n\nexport const _intercept = handler => (target, fieldName, descriptor) => {\n  console.log(\"_intercept\", descriptor);\n  const cancelObserveFieldname = Symbol(\"cancelObserveFieldname: \" + fieldName);\n  addHandler(target, \"stateRegister\", function(props) {\n    this[cancelObserveFieldname] = mobxIntercept(\n      this,\n      fieldName,\n      handler.bind(this)\n    );\n  });\n  addHandler(target, \"release\", function(props) {\n    this[cancelObserveFieldname]();\n  });\n  return descriptor;\n};\n\nexport const intercept:any = parametrizeDecorator(_intercept, () => null);\n\nintercept.computed = handler => (target, fieldName, descriptor) => {\n  const temporaryFieldName = Symbol(\"temporaryFieldName: \" + fieldName);\n  return computed(target, fieldName, {\n    get() {\n      const newValue = descriptor.get.apply(this);\n      const oldValue = this[temporaryFieldName];\n      if (handler.call(this, { newValue, oldValue })) {\n        this[temporaryFieldName] = newValue;\n      }\n      return this[temporaryFieldName];\n    },\n  });\n};\n\nintercept.isEqual = intercept.computed(\n  ({ newValue, oldValue }) => !_.isEqual(newValue, oldValue)\n);\n","import { computed } from \"mobx\";\nimport { parametrizeDecorator } from \"mobx-initializer\";\nimport { intercept } from \"./intercept\";\n\n// example:\n// fieldIdentifierToFunc(\"foo.bar\")({ foo: { bar: 123} }) === 123\nconst fieldIdentifierToFunc = fieldIdentifier => {\n  const exp = fieldIdentifier\n    .split(\".\")\n    .map(field => `(a=a[${JSON.stringify(field)}])`)\n    .join(\"&&\");\n  return eval(`(function(a){return ${exp};})`);\n};\n\nconst createPropDecorator = computedFunc =>\n  parametrizeDecorator(\n    propName => (target, fieldName, descriptor) => {\n      const getter = fieldIdentifierToFunc(propName);\n      return computedFunc(target, fieldName, {\n        get: function() {\n          return getter(this.props);\n        },\n      });\n    },\n    (target, fieldName) => fieldName\n  );\n\nexport const prop:any = createPropDecorator(computed);\n\nprop.deep = createPropDecorator(intercept.isEqual);\n\nconst propDelegateDecorator = parametrizeDecorator(\n  propName => (target, fieldName, descriptor) => {\n    return {\n      get() {\n        return (...args) => {\n          this.props[propName](...args);\n        };\n      },\n    };\n  },\n  (target, fieldName) => fieldName\n);\n\nprop.delegate = propDelegateDecorator;\n","import { observe, observable, computed } from \"mobx\";\nimport {\n  addHandler,\n  combineDecorator,\n} from \"mobx-initializer\";\nimport {  componentStatus } from \"./component\";\n\nconst _state = (target, fieldName, descriptor) => {\n  const cancelObserveFieldname = Symbol(\"_observe_\" + fieldName);\n\n  addHandler(target, \"stateRegister\", function(props) {\n    this[cancelObserveFieldname] = observe(this, fieldName, () => {\n      if (this[componentStatus] === \"mounted\") {\n        this.setState({ [fieldName]: this[fieldName] });\n      }\n    });\n    this.state = this.state || { dammy: \"###\" };\n    this.state[fieldName] = this[fieldName];\n  });\n  addHandler(target, \"release\", function(props) {\n    this[cancelObserveFieldname]();\n  });\n  return descriptor;\n};\n\nexport const state: any = _state;\n\nstate.computed = combineDecorator(computed, _state);\nstate.computed.struct = combineDecorator(computed.struct, _state);\nstate.observable = combineDecorator(observable.ref, _state);\nstate.deep = combineDecorator(observable.deep, _state);\nstate.shallow = combineDecorator(observable.shallow, _state);\nstate.ref = combineDecorator(observable.ref, _state);\nstate.struct = combineDecorator(observable.struct, _state);\n","import { addHandler, combineDecorator } from \"mobx-initializer\";\nimport { state } from \"./state\";\nimport * as crypto from \"crypto\";\n\n// エラーの原因: combineDecoratorの扱いがおかしい\n\nconst _render = (target, fieldName, descriptor) => {\n  if (fieldName === \"render\") {\n    const fieldId = fieldName + crypto.randomBytes(8).toString(\"hex\");\n    Object.defineProperty(\n      target,\n      fieldId,\n      state.computed(target, fieldId, descriptor)\n    );\n    return {\n      configurable: true,\n      value() {\n        return this[fieldId];\n      },\n    };\n  } else {\n    addHandler(target, \"init\", function(props) {\n      this.render = function() {\n        return this[fieldName];\n      };\n    });\n    return state.computed(target, fieldName, descriptor);\n  }\n};\n\nexport const render = _render;\n","import { observe, computed, observable } from \"mobx\";\nimport { addHandler } from \"mobx-initializer\";\n\nconst defaultHandler = value => value;\n\n// Example:\n// @resource({\n// \ton: (resource, handler) => resource.on(\"update\", handler),\n// \toff: (resource, handler) => resource.off(\"update\", handler),\n// \thandler: value => value, // or event => event.value\n// \tresourceFieldName: \"documentResource\"\n// })\n// @observable\n// document\n\nexport const resource = ({\n  on,\n  off,\n  handler = defaultHandler,\n  resourceFieldName,\n}) => (target, fieldName, descriptor) => {\n  const wrappedHandlerFieldName = Symbol(\"_\" + fieldName + \"Handler\");\n  const cancelObserveFieldname = Symbol(\"_resource_\" + fieldName);\n\n  addHandler(target, \"init\", function() {\n    this[wrappedHandlerFieldName] = (...args) => {\n      this[fieldName] = handler.apply(this, args);\n    };\n    this[cancelObserveFieldname] = observe(\n      this,\n      resourceFieldName,\n      change => {\n        const { oldValue, newValue } = change;\n        if (oldValue) {\n          off(oldValue, this[wrappedHandlerFieldName]);\n        }\n        if (newValue) {\n          on(newValue, this[wrappedHandlerFieldName]);\n        }\n      },\n      true\n    );\n  });\n  addHandler(target, \"release\", function() {\n    if (this[resourceFieldName]) {\n      off(this[resourceFieldName], this[wrappedHandlerFieldName]);\n    }\n    this[cancelObserveFieldname]();\n  });\n};\n\nresource.computed = ({ on, off, handler = defaultHandler }) => (\n  target,\n  resolvedFieldName,\n  descriptor\n) => {\n  // resource\n  const resourceFieldName = resolvedFieldName + \"Resource\";\n  Object.defineProperty(target, resourceFieldName, descriptor);\n  computed(target, resourceFieldName, descriptor);\n\n  // resolved\n  delete target[resolvedFieldName];\n  return resource({ on, off, handler, resourceFieldName })(\n    target,\n    resolvedFieldName,\n    observable.ref(target, resolvedFieldName, {\n      configurable: true,\n      writable: true,\n      value: null,\n    })\n  );\n};\n","import { observe } from \"mobx\";\nimport { addHandler, parametrizeDecorator } from \"mobx-initializer\";\n\nexport const _watch = watchFieldName => (target, fieldName, descriptor) => {\n  if (!descriptor.value) {\n    console.error(\"decorator errsor\", watchFieldName, fieldName, descriptor);\n  }\n  if (fieldName) {\n    const cancelObserveFieldname = Symbol(\n      \"cancelObserveFieldname: \" + fieldName\n    );\n    addHandler(target, \"stateRegister\", function(props) {\n      this[cancelObserveFieldname] = observe(\n        this,\n        watchFieldName,\n        descriptor.value.bind(this),\n        true\n      );\n    });\n    addHandler(target, \"release\", function(props) {\n      this[cancelObserveFieldname]();\n    });\n  } else {\n    const cancelObserveFieldname = Symbol(\"cancelObserveFieldname\");\n    addHandler(target, \"stateRegister\", function(props) {\n      this[cancelObserveFieldname] = observe(\n        watchFieldName,\n        descriptor.value.bind(this)\n      );\n    });\n    addHandler(target, \"release\", function(props) {\n      this[cancelObserveFieldname]();\n    });\n  }\n};\n\nexport const watch = parametrizeDecorator(_watch, () => null);\n"],"names":["componentAppliedFlag","Symbol","pureComponentAppliedFlag","componentStatus","_component","target","prototype","component","props","applyHandlerOnce","componentDidMount","call","this","componentWillUnmount","__decorate","observable","ref","_pureComponent","shouldComponentUpdate","nextProps","nextState","state","combineDecorator","initializer","pure","_intercept","handler","fieldName","descriptor","console","log","cancelObserveFieldname","addHandler","mobxIntercept","bind","intercept","parametrizeDecorator","computed","temporaryFieldName","get","newValue","apply","oldValue","isEqual","_","fieldIdentifierToFunc","fieldIdentifier","exp","split","map","field","JSON","stringify","join","eval","createPropDecorator","computedFunc","propName","getter","prop","deep","propDelegateDecorator","_this","delegate","_state","observe","setState","dammy","struct","shallow","_render","fieldId","crypto","toString","Object","defineProperty","configurable","value","render","defaultHandler","resource","on","off","resourceFieldName","wrappedHandlerFieldName","args","change","resolvedFieldName","writable","_watch","watchFieldName","error","watch"],"mappings":"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"}