{"version":3,"file":"mobx-react-component.cjs.production.min.js","sources":["../src/component.ts","../src/intercept.ts","../src/prop.ts","../src/state.ts","../src/render.ts","../src/resource.ts","../src/watch.ts"],"sourcesContent":["import { observable } from \"mobx\";\nimport {\n  applyHandler,\n  ClassType,\n  combineClassDecorator,\n} from \"mobx-initializer\";\nimport React from \"react\";\nconst componentAppliedFlag = Symbol(\"isAppliedMobxReactComponentInitializer\");\nconst pureComponentAppliedFlag = Symbol(\n  \"isAppliedMobxReactPureComponentInitializer\"\n);\n\nexport const componentStatus = Symbol(\"componentStatus\");\n\nexport type ReactComponentType = ClassType<React.Component>;\n\nconst _component = (target: ReactComponentType): ReactComponentType => {\n  if (target.prototype[componentAppliedFlag]) {\n    return target;\n  }\n  class Component extends target {\n    [componentAppliedFlag] = true;\n    [componentStatus]?: string;\n    @observable.ref\n    props: any;\n    constructor(props: any) {\n      super(props);\n      applyHandler(this, \"init\", props);\n      applyHandler(this, \"stateRegister\", props);\n      applyHandler(this, \"resourceRegister\", props);\n    }\n    componentDidMount() {\n      super.componentDidMount?.call(this);\n      this[componentStatus] = \"mounted\";\n    }\n    componentWillUnmount() {\n      super.componentWillUnmount?.call(this);\n      applyHandler(this, \"release\");\n    }\n  }\n  return Component;\n};\n\n// pure componentでは、propの変更があってもstateの変更がない限り、renderされない\n\nconst _pureComponent = (target: any) => {\n  if (target.prototype[pureComponentAppliedFlag]) {\n    return target;\n  }\n  return class Component extends target {\n    [pureComponentAppliedFlag] = true;\n    shouldComponentUpdate(nextProps: any, nextState: any) {\n      return nextState !== this.state;\n    }\n  };\n};\n\nexport const component = _component as ClassDecorator & {\n  pure: ClassDecorator;\n};\n\ncomponent.pure = combineClassDecorator(\n  _component,\n  _pureComponent\n) as ClassDecorator;\n","import isEqual from \"lodash.isequal\";\nimport { computed, intercept as mobxIntercept } from \"mobx\";\nimport { addHandler } from \"mobx-initializer\";\n\nexport const _intercept = (handler: Function): MethodDecorator => (\n  target: object,\n  fieldName: string | symbol,\n  descriptor: PropertyDescriptor\n) => {\n  const cancelObserveFieldname = Symbol(\n    \"cancelObserveFieldname: \" + fieldName.toString()\n  );\n  addHandler(target, \"stateRegister\", function(this: any) {\n    this[cancelObserveFieldname] = mobxIntercept(\n      this,\n      fieldName,\n      handler.bind(this)\n    );\n  });\n  addHandler(target, \"release\", function(this: any) {\n    this[cancelObserveFieldname]();\n  });\n  return descriptor;\n};\n\nexport const intercept = _intercept as ((\n  handler: Function\n) => MethodDecorator) & {\n  isEqual: MethodDecorator;\n  computed: (handler: Function) => MethodDecorator;\n};\n\nintercept.computed = (handler: Function): MethodDecorator => (\n  target: object,\n  fieldName: string | symbol,\n  descriptor: PropertyDescriptor\n) => {\n  const temporaryFieldName = Symbol(\n    \"temporaryFieldName: \" + fieldName.toString()\n  );\n  return computed(target, fieldName, {\n    get(this: any) {\n      const newValue = descriptor.get?.apply(this);\n      const oldValue = this[temporaryFieldName];\n      if (handler.call(this, { newValue, oldValue })) {\n        this[temporaryFieldName] = newValue;\n      }\n      return this[temporaryFieldName];\n    },\n  });\n};\n\nintercept.isEqual = intercept.computed(\n  ({ newValue, oldValue }: { newValue: any; oldValue: any }) =>\n    !isEqual(newValue, oldValue)\n);\n","import { computed } from \"mobx\";\nimport {\n  parametrizePropertyDecorator,\n  PropertyDecoratorOptionalGenerator,\n} from \"mobx-initializer\";\n\nimport { intercept } from \"./intercept\";\n\n// example:\n// fieldIdentifierToFunc(\"foo.bar\")({ foo: { bar: 123} }) === 123\nconst fieldIdentifierToFunc = (fieldIdentifier: string) => {\n  const exp = fieldIdentifier\n    .split(\".\")\n    .map(field => `(a=a[${JSON.stringify(field)}])`)\n    .join(\"&&\");\n  return eval(`(function(a){return ${exp};})`);\n};\n\nconst createPropDecorator = (baseDecorator: MethodDecorator) => {\n  return parametrizePropertyDecorator(\n    (propName: string) => (target, fieldName) => {\n      const getter = fieldIdentifierToFunc(propName);\n      baseDecorator(target, fieldName, {\n        get: function(this: any) {\n          return getter(this.props);\n        },\n      });\n    },\n    (_target: unknown, fieldName: string) => fieldName\n  );\n};\nexport const prop = createPropDecorator(\n  computed\n) as PropertyDecoratorOptionalGenerator<string> & {\n  deep: PropertyDecoratorOptionalGenerator<string>;\n  delegate: PropertyDecoratorOptionalGenerator<string>;\n};\n\nprop.deep = createPropDecorator(intercept.isEqual);\n\nprop.delegate = parametrizePropertyDecorator(\n  (propName: string) => (target: object, fieldName: string | symbol) => {\n    return {\n      get(this: any) {\n        return (...args: any) => {\n          this.props[propName](...args);\n        };\n      },\n    } as PropertyDescriptor;\n  },\n  (_target: unknown, fieldName: string) => fieldName\n);\n","import { computed, observable, observe } from \"mobx\";\nimport { addHandler, combinePropertyDecorator } from \"mobx-initializer\";\n\nimport { componentStatus } from \"./component\";\n\nconst _state = (target: object, fieldName: string) => {\n  const cancelObserveFieldname = Symbol(\"_observe_\" + fieldName);\n\n  addHandler(target, \"stateRegister\", function(this: any) {\n    this[cancelObserveFieldname] = observe(this, fieldName, () => {\n      if (this[componentStatus] === \"mounted\") {\n        this.setState({ [fieldName]: this[fieldName] });\n      }\n    });\n    this.state = this.state || { dammy: \"###\" };\n    this.state[fieldName] = this[fieldName];\n  });\n  addHandler(target, \"release\", function(this: any) {\n    this[cancelObserveFieldname]();\n  });\n};\n\nexport const state = _state as typeof _state & {\n  computed: MethodDecorator & {\n    struct: MethodDecorator;\n  };\n  observable: MethodDecorator;\n  deep: MethodDecorator;\n  shallow: MethodDecorator;\n  ref: MethodDecorator;\n  struct: MethodDecorator;\n};\n\nstate.computed = combinePropertyDecorator(\n  computed,\n  _state as PropertyDecorator\n) as PropertyDecorator & {\n  struct: PropertyDecorator;\n};\nstate.computed.struct = combinePropertyDecorator(\n  computed.struct,\n  _state as PropertyDecorator\n);\nstate.observable = combinePropertyDecorator(\n  observable.ref,\n  _state as PropertyDecorator\n);\nstate.deep = combinePropertyDecorator(\n  observable.deep,\n  _state as PropertyDecorator\n);\nstate.shallow = combinePropertyDecorator(\n  observable.shallow,\n  _state as PropertyDecorator\n);\nstate.ref = combinePropertyDecorator(\n  observable.ref,\n  _state as PropertyDecorator\n);\nstate.struct = combinePropertyDecorator(\n  observable.struct,\n  _state as PropertyDecorator\n);\n\nexport class X {\n  @state\n  x = 0;\n}\n","import * as crypto from \"crypto\";\n\nimport { state } from \"./state\";\n\nexport const render = (\n  target: object,\n  fieldName: string,\n  descriptor: PropertyDescriptor\n) => {\n  if (fieldName === \"render\") {\n    const fieldId = fieldName + crypto.randomBytes(8).toString(\"hex\");\n    state.computed(target, fieldId, {\n      get: descriptor.value,\n    });\n    return {\n      configurable: true,\n      value(this: any) {\n        return this[fieldId];\n      },\n    };\n  } else {\n    state.computed(target, fieldName, {\n      get: descriptor.get || descriptor.value,\n    });\n    Object.defineProperty(target, \"render\", {\n      value() {\n        return this[fieldName];\n      },\n    });\n  }\n};\n","import { computed, observable, observe } from \"mobx\";\nimport { addHandler } from \"mobx-initializer\";\n\nconst defaultHandler = (value: any) => value;\n\n// Example:\n// @resource({\n// \ton: (resource, handler) => resource.on(\"update\", handler),\n// \toff: (resource, handler) => resource.off(\"update\", handler),\n// \thandler: value => value, // or event => event.value\n// \tresourceFieldName: \"documentResource\"\n// })\n// @observable\n// document\n\nexport const resource = <Resource>({\n  on,\n  off,\n  handler = defaultHandler,\n  resourceFieldName,\n}: {\n  on: (resource: Resource, handler: Function) => void;\n  off: (resource: Resource, handler: Function) => void;\n  handler: Function;\n  resourceFieldName: string;\n}) => (target: object, fieldName: string, descriptor: PropertyDescriptor) => {\n  const wrappedHandlerFieldName = Symbol(\"_\" + fieldName + \"Handler\");\n  const cancelObserveFieldname = Symbol(\"_resource_\" + fieldName);\n\n  addHandler(target, \"init\", function(this: any) {\n    this[wrappedHandlerFieldName] = (...args: any) => {\n      this[fieldName] = handler.apply(this, args);\n    };\n    this[cancelObserveFieldname] = observe(\n      this,\n      resourceFieldName,\n      change => {\n        const { oldValue, newValue } = change;\n        if (oldValue) {\n          off(oldValue, this[wrappedHandlerFieldName]);\n        }\n        if (newValue) {\n          on(newValue, this[wrappedHandlerFieldName]);\n        }\n      },\n      true\n    );\n  });\n  addHandler(target, \"release\", function(this: any) {\n    if (this[resourceFieldName]) {\n      off(this[resourceFieldName], this[wrappedHandlerFieldName]);\n    }\n    this[cancelObserveFieldname]();\n  });\n};\n\nresource.computed = <Resource>({\n  on,\n  off,\n  handler = defaultHandler,\n}: {\n  on: (resource: Resource, handler: Function) => void;\n  off: (resource: Resource, handler: Function) => void;\n  handler: Function;\n  resourceFieldName: string;\n}) => (\n  target: object,\n  resolvedFieldName: string,\n  descriptor: PropertyDescriptor\n) => {\n  // resource\n  const resourceFieldName = resolvedFieldName + \"Resource\";\n  Object.defineProperty(target, resourceFieldName, descriptor);\n  computed(target, resourceFieldName, descriptor);\n\n  // resolved\n  delete (target as any)[resolvedFieldName];\n  return resource({ on, off, handler, resourceFieldName })(\n    target,\n    resolvedFieldName,\n    (observable.ref(target, resolvedFieldName, {\n      configurable: true,\n      writable: true,\n      value: null,\n    }) as unknown) as PropertyDescriptor\n  );\n};\n","import { observe } from \"mobx\";\nimport { addHandler } from \"mobx-initializer\";\n\nexport const watch = (watchFieldName: string) => (\n  target: Function,\n  fieldName: string,\n  descriptor: PropertyDescriptor\n) => {\n  if (!descriptor.value) {\n    // eslint-disable-next-line no-console\n    console.error(\"decorator error\", watchFieldName, fieldName, descriptor);\n  }\n  if (fieldName) {\n    const cancelObserveFieldname = Symbol(\n      \"cancelObserveFieldname: \" + fieldName\n    );\n    addHandler(target, \"stateRegister\", function(this: any) {\n      this[cancelObserveFieldname] = observe(\n        this,\n        watchFieldName,\n        descriptor.value.bind(this),\n        true\n      );\n    });\n    addHandler(target, \"release\", function(this: any) {\n      this[cancelObserveFieldname]();\n    });\n  } else {\n    const cancelObserveFieldname = Symbol(\"cancelObserveFieldname\");\n    addHandler(target, \"stateRegister\", function(this: any) {\n      this[cancelObserveFieldname] = observe(\n        watchFieldName,\n        descriptor.value.bind(this)\n      );\n    });\n    addHandler(target, \"release\", function(this: any) {\n      this[cancelObserveFieldname]();\n    });\n  }\n};\n"],"names":["componentAppliedFlag","Symbol","pureComponentAppliedFlag","componentStatus","_component","target","prototype","Component","props","applyHandler","componentDidMount","call","this","componentWillUnmount","__decorate","observable","ref","_pureComponent","shouldComponentUpdate","nextProps","nextState","state","component","pure","combineClassDecorator","_intercept","handler","fieldName","descriptor","cancelObserveFieldname","toString","addHandler","mobxIntercept","bind","intercept","computed","temporaryFieldName","get","newValue","_descriptor$get","apply","oldValue","isEqual","fieldIdentifierToFunc","fieldIdentifier","exp","split","map","field","JSON","stringify","join","eval","createPropDecorator","baseDecorator","parametrizePropertyDecorator","propName","getter","_target","prop","deep","delegate","_this","_state","observe","setState","dammy","combinePropertyDecorator","struct","shallow","X","render","fieldId","crypto","value","configurable","Object","defineProperty","defaultHandler","resource","on","off","resourceFieldName","wrappedHandlerFieldName","args","change","resolvedFieldName","writable","watch","watchFieldName","console","error"],"mappings":"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"}